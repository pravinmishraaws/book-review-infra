trigger:
  paths:
    include:
      - terraform/**
      - ansible/**
  branches:
    include:
      - main

stages:

- stage: Terraform
  displayName: 'Provision Infrastructure'
  jobs:
  - job: Terraform_Apply
    displayName: 'Terraform Apply'
    pool:
      name: 'self-hosted-agent-pool'
    steps:
 
    # Not needed for hosted vm
    # - task: UsePythonVersion@0
    #   inputs:
    #     versionSpec: '3.x'

    - task: DownloadSecureFile@1
      name: download_ssh_pub
      inputs:
        secureFile: 'id_rsa.pub'

    - script: |
        echo "Copying SSH public key into Terraform module"
        mkdir -p ~/.ssh
        cp $(download_ssh_key.secureFilePath) ~/.ssh/id_rsa.pub
        # Copy into Terraform compute module where Terraform expects it
        cp $(download_ssh_key.secureFilePath) terraform/modules/compute/id_rsa.pub

        ls -l terraform/modules/compute/
      name: extract_pubkey
      displayName: 'Extract SSH Public Key for Terraform'
    

    - task: AzureCLI@2
      inputs:
        azureSubscription: 'it-azure-connection'
        scriptType: bash
        scriptLocation: inlineScript
        workingDirectory: $(System.DefaultWorkingDirectory)/terraform
        inlineScript: |
          echo "##[group]Terraform Init/Plan/Apply"
          cd terraform
          terraform init -input=false 
          terraform plan -input=false -var-file="envs/dev.tfvars"
          terraform apply -input=false -auto-approve -var-file="envs/dev.tfvars"
          echo "##[endgroup]"

- stage: Ansible
  displayName: 'Configure VMs using Ansible'
  dependsOn: Terraform
  condition: succeeded()
  jobs:
  - job: Ansible_Run
    displayName: 'Run Ansible Playbook'
    pool:
      name: 'self-hosted-agent-pool'
    steps:

    - script: |
        sudo apt update
        sudo apt install -y ansible sshpass
      displayName: 'Install Ansible & SSH dependencies'

    - task: DownloadSecureFile@1
      name: download_ssh_key
      inputs:
        secureFile: 'id_rsa' 

    - script: |
        mkdir -p ~/.ssh
        cp $(download_ssh_key.secureFilePath) ~/.ssh/id_rsa
        ls -al ~/.ssh
        head ~/.ssh/id_rsa
        file ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
      displayName: 'Setup SSH Private Key'
      env:
        SSH_PRIVATE_KEY: $(SSH_PRIVATE_KEY)

    - script: |
        cd ansible
        ansible-playbook -i inventory.ini site.yml --ssh-extra-args "-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null"
      displayName: 'Run Ansible Playbook'
      env:
        ANSIBLE_HOST_KEY_CHECKING: 'False'
